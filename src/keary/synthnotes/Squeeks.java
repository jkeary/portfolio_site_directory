package keary.synthnotes;
import java.io.*;
import com.softsynth.jsyn.*;
/**************
** WARNING - this code automatically generated by Wire.
** The real source is probably a Wire patch.
** Do NOT edit this file unless you copy it to another directory and change the name.
** Otherwise it is likely to get clobbered the next time you
** export Java source code from Wire.
**
** Wire is available from: http://www.softsynth.com/wire/
*/
public class Squeeks extends SynthNote
{
    // Declare units and ports.
    LineOut lineOut;
    SineOscillator sinOsc;
    SineOscillator sinOsc2;
    SineOscillator sinOsc3;

    public Squeeks()
    {
        this( Synth.getSharedContext() );
    }
    public Squeeks( SynthContext synthContext )
    {
        super( synthContext );
        // Create unit generators.
        add( lineOut = new LineOut(synthContext) );
        add( sinOsc = new SineOscillator(synthContext) );
        add( sinOsc2 = new SineOscillator(synthContext) );
        add( sinOsc3 = new SineOscillator(synthContext) );
        // Connect units and ports.
        sinOsc.frequency.set( 0, 1.6818584756647668 );
        sinOsc.phase.set( 0, -0.5030690637622505 );
        sinOsc.amplitude.set( 0, 8989.183130669038 );
        sinOsc.output.connect( sinOsc2.frequency);
        sinOsc2.phase.set( 0, 0.9934156686407518 );
        sinOsc2.amplitude.set( 0, 5.0 );
        sinOsc2.output.connect( sinOsc3.amplitude);
        sinOsc3.frequency.set( 0, 0.38569321124287315 );
        sinOsc3.phase.set( 0, 0.30075846404113576 );
        sinOsc3.output.connect( 0, lineOut.input, 1);
        sinOsc3.output.connect( lineOut.input);
    }
    
    public void setStage( int time, int stage )
    {
        switch( stage )
        {
        case 0:
            start( time );
            break;
        case 1:
            break;
        default:
            break;
        }
    }
}
